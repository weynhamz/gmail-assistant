service: gmail-assistant

useDotenv: true

provider:
  name: google
  stage: ${opt:stage, 'dev'}
  region: us-central1
  runtime: nodejs12
  project: ${env:GCP_PROJECT}
  # The GCF credentials can be a little tricky to set up. Luckily we've documented this for you here:
  # https://serverless.com/framework/docs/providers/google/guide/credentials/
  #
  # the path to the credentials file needs to be absolute
  #  credentials: ~/.gcloud/keyfile.json
  credentials: ~/.config/gcloud/application_default_credentials.json
  environment:
    GCP_PROJECT: ${env:GCP_PROJECT}
    PUBSUB_TOPIC: ${self:custom.topicName}
    GOOGLE_CLIENT_ID: ${env:GOOGLE_CLIENT_ID}
    GOOGLE_CLIENT_SECRET: ${env:GOOGLE_CLIENT_SECRET}
    GOOGLE_CALLBACK_URL: ${env:GOOGLE_CALLBACK_URL}
    GOOGLE_SHEET_ID: ${env:GOOGLE_SHEET_ID}

frameworkVersion: '3'

plugins:
  - serverless-google-cloudfunctions

# needs more granular excluding in production as only the serverless provider npm
# package should be excluded (and not the whole node_modules directory)
package:
  exclude:
    - node_modules/**
    - .gitignore
    - .git/**

custom:
  topicName: ${self:service}-gmail-push
  topicResource: projects/${env:GCP_PROJECT}/topics/${self:custom.topicName}

functions:
  auth_init:
    handler: auth_init
    events:
      - http: true
  auth_callback:
    handler: auth_callback
    events:
      - http: true

  # NOTE: the following uses an "event" event (pubSub event in this case).
  # Please create the corresponding resources in the Google Cloud
  # before deploying this service through Serverless
  watchGmailMessages:
    handler: watchGmailMessages
    events:
      - event:
          eventType: providers/cloud.pubsub/eventTypes/topic.publish
          resource: ${self:custom.topicResource}
    environment:
      FUNCTION_TRIGGER_TYPE: CLOUD_PUBSUB_TRIGGER

# you can define resources, templates etc. the same way you would in a
# Google Cloud deployment configuration
#resources:
#  resources:
#    - type: storage.v1.bucket
#      name: my-serverless-service-bucket
#  imports:
#    - path: my_template.jinja
resources:
  resources:
    - type: gcp-types/pubsub-v1:projects.topics
      name: ${self:custom.topicName}
      properties:
        topic: ${self:custom.topicName}
